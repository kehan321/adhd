import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:nn/loginscreen.dart';
import 'firebase_options.dart'; // Generated by flutterfire configure

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter CRUD App',
      theme: ThemeData(primarySwatch: Colors.blue),
      home: LoginScreen(),
    );
  }
}

// class HomePage extends StatefulWidget {
//   @override
//   _HomePageState createState() => _HomePageState();
// }

// class _HomePageState extends State<HomePage> {
//   final TextEditingController _nameController = TextEditingController();
//   final TextEditingController _ageController = TextEditingController();
//   final CollectionReference _usersCollection = FirebaseFirestore.instance.collection('users');

//   Future<void> _createUser() async {
//     try {
//       await _usersCollection.add({
//         'name': _nameController.text,
//         'age': int.parse(_ageController.text),
//       });
//       ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('User added successfully')));
//       _nameController.clear();
//       _ageController.clear();
//     } catch (e) {
//       print(e);
//       ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('Error adding user')));
//     }
//   }

//  Future<void> _updateUser(String id) async {
//   try {
//     // Get the document reference
//     DocumentReference userDocRef = _usersCollection.doc(id);

//     // Check if the document exists
//     DocumentSnapshot docSnapshot = await userDocRef.get();

//     if (docSnapshot.exists) {
//       // Update user data
//       await userDocRef.update({
//         'name': _nameController.text,
//         'age': int.parse(_ageController.text),
//       });
//       ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('User updated successfully')));
//       _nameController.clear();
//       _ageController.clear();
//     } else {
//       ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('User not found')));
//     }
//   } catch (e) {
//     print('Error: $e');
//     ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('Error updating user')));
//   }
// }


//   Future<void> _deleteUser(String id) async {
//     try {
//       await _usersCollection.doc(id).delete();
//       ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('User deleted successfully')));
//     } catch (e) {
//       print(e);
//       ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('Error deleting user')));
//     }
//   }

//   Future<void> _readUsers() async {
//     try {
//       final snapshot = await _usersCollection.get();
//       snapshot.docs.forEach((doc) {
//         print(doc.data());
//       });
//     } catch (e) {
//       print(e);
//     }
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       appBar: AppBar(title: Text('Flutter CRUD App')),
//       body: Padding(
//         padding: EdgeInsets.all(16.0),
//         child: Column(
//           children: [
//             TextField(
//               controller: _nameController,
//               decoration: InputDecoration(labelText: 'Name'),
//             ),
//             TextField(
//               controller: _ageController,
//               decoration: InputDecoration(labelText: 'Age'),
//               keyboardType: TextInputType.number,
//             ),
//             SizedBox(height: 20),
//             Row(
//               mainAxisAlignment: MainAxisAlignment.spaceAround,
//               children: [
//                 ElevatedButton(
//                   onPressed: _createUser,
//                   child: Text('Add User'),
//                 ),
//                 ElevatedButton(
//                   onPressed: _readUsers,
//                   child: Text('Read Users'),
//                 ),
//               ],
//             ),
//             SizedBox(height: 20),
//             StreamBuilder<QuerySnapshot>(
//               stream: _usersCollection.snapshots(),
//               builder: (context, snapshot) {
//                 if (snapshot.connectionState == ConnectionState.waiting) {
//                   return Center(child: CircularProgressIndicator());
//                 }
//                 if (snapshot.hasError) {
//                   return Center(child: Text('Error fetching data'));
//                 }
//                 if (snapshot.hasData) {
//                   final users = snapshot.data!.docs;
//                   return ListView.builder(
//                     shrinkWrap: true,
//                     itemCount: users.length,
//                     itemBuilder: (context, index) {
//                       final user = users[index];
//                       return ListTile(
//                         title: Text(user['name']),
//                         subtitle: Text('Age: ${user['age']}'),
//                         trailing: Row(
//                           mainAxisSize: MainAxisSize.min,
//                           children: [
//                             IconButton(
//                               icon: Icon(Icons.edit),
//                               onPressed: () {
//                                 _nameController.text = user['name'];
//                                 _ageController.text = user['age'].toString();
//                                 _updateUser(user.id);
//                               },
//                             ),
//                             IconButton(
//                               icon: Icon(Icons.delete),
//                               onPressed: () {
//                                 _deleteUser(user.id);
//                               },
//                             ),
//                           ],
//                         ),
//                       );
//                     },
//                   );
//                 }
//                 return Center(child: Text('No users found'));
//               },
//             ),
//           ],
//         ),
//       ),
//     );
//   }
// }








// crud operation 




